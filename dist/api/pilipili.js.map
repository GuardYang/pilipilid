{"version":3,"sources":["../../src/api/pilipili.js"],"names":[],"mappings":"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","file":"pilipili.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport Pili from 'pili';\nimport level from 'level';\n\nconst db = level('./mydb');\nconst credentials = new Pili.Credentials(\"MqF35-H32j1PH8igh-am7aEkduP511g-5-F7j47Z\", \"BF9QHMKIUQp_Oh4Xk8SwyhmwJ0CO-9n-RJzDgZQr\");\nconst hub = new Pili.Hub(credentials, \"NIU7PS\");\n\nlet pilipilis = [];\n\ndb.get(\"pilipili\", function (err, value) {\n  if (err) {\n    if (err.notFound) {\n\n    }\n  }else{\n    pilipilis = JSON.parse(value);\n  }\n\n});\n\nexport default ({ config }) => resource({\n\n\t/** Property name to store preloaded entity on `request`. */\n\tid : 'pilipili',\n\n\t/** For requests with an `id`, you can auto-load the entity.\n\t *  Errors terminate the request, success sets `req[id] = data`.\n\t */\n\tload(req, id, callback) {\n\t\tlet pilipili = pilipilis.find( pilipili => pilipili.id===id ),\n\t\t\terr = pilipili ? null : 'Not found';\n\t\tcallback(err, pilipili);\n\t},\n\n\t/** GET / - List all entities */\n\tindex({ params }, res) {\n\t\tres.json(pilipilis);\n\t},\n\n\t/** POST / - Create a new entity */\n\tcreate({ body }, res) {\n    let title = body.title | null;\n    var options = {\n      title          : body.title,    // optional, auto-generated as default\n      publishKey     : null,    // optional, auto-generated as default\n      publishSecurity : \"static\" // optional, can be \"dynamic\" or \"static\", \"dynamic\" as default\n    };\n\n    hub.createStream(options, function(err, stream) {\n      if (!err) {\n        pilipilis.push(stream);\n        db.put('pilipili',JSON.stringify(pilipilis));\n        res.json(stream);\n      } else {\n        console.log(err + 'error code: ' + err.errorCode + 'http code: ' + err.httpCode);\n        res.json({error:err})\n      }\n    });\n\n\t},\n\n\t/** GET /:id - Return a given entity */\n\tread({ pilipili }, res) {\n    console.log(pilipili);\n\t\tres.json(pilipili);\n\t},\n\n\t/** PUT /:id - Update a given entity */\n\tupdate({ pilipili, body }, res) {\n\t\t//for (let key in body) {\n\t\t//\tif (key!=='id') {\n\t\t//\t\tpilipili[key] = body[key];\n\t\t//\t}\n\t\t//}\n\t\tres.sendStatus(204);\n\t},\n\n\t/** DELETE /:id - Delete a given entity */\n\tdelete({ pilipili }, res) {\n    //pilipilis.splice(pilipilis.indexOf(pilipili), 1);\n    //res.sendStatus(204);\n    hub.getStream(pilipili.id, function(err, stream) {\n      if (!err) {\n        console.log(stream);\n        stream.delete(function(err, data) {\n          if (!err) {\n            console.log(data);\n            pilipilis.splice(pilipilis.indexOf(pilipili), 1);\n            db.put('pilipili',JSON.stringify(pilipilis));\n            res.sendStatus(204);\n          } else {\n            console.log(err + 'error code: ' + err.errorCode + 'http code: ' + err.httpCode);\n            res.json({error:err})\n          }\n\n        });\n      }\n    });\n\n\t},\n});\n"]}